services:
  spark-jupyter:
    build:
      context: ./Docker/jupyter
      dockerfile: Dockerfile
    container_name: spark_jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./workspace:/home/jovyan/work
    environment:
      - NB_UID=1000
      # - NB_GID=100
      - PYSPARK_PYTHON=python3
      - JUPYTER_TOKEN=easy

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper_streaming_lab
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka_streaming_lab
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_streaming_lab:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15
    container_name: postgresql_streaming_lab
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: myuserpass
      POSTGRES_DB: postgres
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - postgres
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  pgdata:
  grafana-storage: